#!/usr/bin/env python
# -*- mode: python -*-

"""
Show available datasets.
"""

# You need to run this program with all the scipion env variables defined.
# (For example, with "scipion run sci-data".)

import sys
from argparse import ArgumentParser
import tempfile

sys.path.append('/usr/lib/python2.7/dist-packages/')  # cheating :)
from IPython.terminal.embed import embed

from pyworkflow.tests import DataSet

from pyworkflow.manager import Manager
from pyworkflow.em.protocol.protocol_import import (
    ProtImportMicrographs, ProtImportVolumes, ProtImportMovies,
    ProtImportParticles, ProtImportCoordinates)


def main():
   parser = ArgumentParser(description=__doc__)
   add = parser.add_argument  # short notation
   add('datasets', metavar='DATASET', nargs='*', help='datasets to inspect')
   add('--path', action='store_true', help='show the path to the data')
   add('--files', action='store_true', help='list the files inside the data')
   add('--shell', action='store_true', help='open shell to interact with data')
   args = parser.parse_args()

   if args.shell:
      manager = Manager()
      proj_name = tempfile.mktemp(prefix='sci-data_', dir='')
      assert not manager.hasProject(proj_name)
      proj = manager.createProject(proj_name)

   datasets = args.datasets or DataSet._datasetDict.keys()
   for name in datasets:
      if not name in DataSet._datasetDict:
         print 'Warning: Skipping unknown dataset "%s"' % name
         continue
      ds = DataSet._datasetDict[name]
      print '%s%s' % (name, ' (%s)' % ds.path if args.path else '')

      if args.files:
         for fname, fpath in ds.filesDict.items():
            print '  %-10s %s' % (fname, fpath)

      if args.shell:
         print """
Defined variables:
    ds - current dataset (%s)
    proj - temporary project (protocols will run on this project)

You can now do something like:
     prot = proj.newProtocol(ProtImportMicrographs,
                             pattern=ds.getFile('allMics'),
                             samplingRate=1.237, voltage=300)
     proj.launchProtocol(prot, wait=True)
""" % name
         embed(display_banner=False)

   if args.shell:
      pass
      #manager.deleteProject(proj_name)



if __name__ == '__main__':
   main()
